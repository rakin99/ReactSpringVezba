{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\Bioskop.jsx\";\nimport React from \"react\";\nimport Login from \"./Login\";\nimport Buttons from \"./Buttons\";\nimport Main from \"./Main\";\nimport Registracija from \"./Registracija\";\nimport $ from \"jquery\";\nimport _decodeJWT from 'jwt-decode';\n\nclass Bioskop extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      usernameRequest: \"\",\n      passwordRequest: \"\",\n      logedUsername: \"\",\n      roles: \"\",\n      NoviFilm: false,\n      Users: false,\n      NovaProjekcija: false,\n      filmovi: [],\n      projekcije: [],\n      idProjekcije: false,\n      mojProfil: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToUpdateAdd = this.handleToUpdateAdd.bind(this);\n    this.handleToUpdateFilmovi = this.handleToUpdateFilmovi.bind(this);\n    this.handleToUpdateProjekcije = this.handleToUpdateProjekcije.bind(this);\n    this.handleToUpdateAddProjekcije = this.handleToUpdateAddProjekcije.bind(this);\n    this.setTrue = this.setTrue.bind(this);\n  }\n\n  componentDidMount() {\n    $('#Registracija').hide();\n  }\n\n  handleClick(event) {\n    const name = event.target.name;\n    /*  $('#Filmovi').hide()\r\n      $('#noviFilm').hide()\r\n      $('#NoviFilm').show()*/\n\n    this.setState({\n      NoviFilm: false,\n      Users: false,\n      NovaProjekcija: false,\n      idProjekcije: false,\n      mojProfil: false\n    });\n\n    if (name === \"logout\") {\n      window.location.reload();\n    } else if (name === \"Registracija\") {\n      $('#main').children().hide();\n      $('#idLogin').hide();\n      $('#Registracija').show();\n      $('#registracija').hide();\n    } else {\n      $('#main').children().hide();\n      this.setState({\n        [name]: true\n      });\n      $('#' + name).show();\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleToUpdateAdd(someArg) {\n    this.state.filmovi.push(someArg);\n  }\n\n  handleToUpdateAddProjekcije(someArg) {\n    this.state.projekcije.push(someArg);\n  }\n\n  handleToUpdateFilmovi(someArg) {\n    this.setState({\n      filmovi: someArg\n    });\n  }\n\n  handleToUpdateProjekcije(someArg) {\n    this.setState({\n      projekcije: someArg\n    });\n  }\n\n  setTrue() {\n    console.log(\"SetTrue\");\n    this.setState({\n      idProjekcije: true\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.usernameRequest === \"\" || this.state.passwordRequest === \"\") {\n      alert(\"--Polja za korisnicko ime i lozinku moraju biti popunjena!--\");\n    } else {\n      const userLogin = {\n        username: this.state.usernameRequest,\n        password: this.state.passwordRequest\n      };\n      var config = {\n        dataType: 'json',\n        method: 'post',\n        body: JSON.stringify(userLogin)\n      };\n      fetch('http://localhost:8080/auth/login', config).then(response => {\n        if (!response.ok) {\n          alert(\"Pogresno korisnicko ime ili lozinka!\");\n          window.location.reload();\n        } else {\n          return response.json();\n        }\n      }).then(res => {\n        const jwt = res.accessToken;\n        localStorage.setItem('jwt', jwt);\n\n        const decodedJWTData = _decodeJWT(jwt);\n\n        if (decodedJWTData != null) {\n          this.setState({\n            logedUsername: decodedJWTData.sub,\n            roles: decodedJWTData.roles,\n            passwordRequest: \"\",\n            usernameRequest: \"\"\n          });\n        }\n      });\n      $('#idLogin').hide();\n    }\n  }\n\n  render() {\n    const buttons = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Buttons, {\n      state: this.state,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 59\n      }\n    });\n    const main = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Main, {\n      setTrue: this.setTrue,\n      state: this.state,\n      handleToUpdateProjekcije: this.handleToUpdateProjekcije,\n      handleToUpdateAddProjekcije: this.handleToUpdateAddProjekcije,\n      handleToUpdateAdd: this.handleToUpdateAdd,\n      handleToUpdateFilmovi: this.handleToUpdateFilmovi,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 55\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Bioskop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      handleClick: this.handleClick,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Registracija, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), buttons, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), main);\n  }\n\n}\n\nexport default Bioskop;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/Bioskop.jsx"],"names":["React","Login","Buttons","Main","Registracija","$","_decodeJWT","Bioskop","Component","constructor","state","usernameRequest","passwordRequest","logedUsername","roles","NoviFilm","Users","NovaProjekcija","filmovi","projekcije","idProjekcije","mojProfil","handleClick","bind","handleChange","handleSubmit","handleToUpdateAdd","handleToUpdateFilmovi","handleToUpdateProjekcije","handleToUpdateAddProjekcije","setTrue","componentDidMount","hide","event","name","target","setState","window","location","reload","children","show","value","someArg","push","console","log","e","preventDefault","alert","userLogin","username","password","config","dataType","method","body","JSON","stringify","fetch","then","response","ok","json","res","jwt","accessToken","localStorage","setItem","decodedJWTData","sub","render","buttons","main"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport Login from \"./Login\"\r\nimport Buttons from \"./Buttons\"\r\nimport Main from \"./Main\"\r\nimport Registracija from \"./Registracija\"\r\n\r\nimport $ from \"jquery\" \r\nimport _decodeJWT from 'jwt-decode'\r\n\r\nclass Bioskop extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            usernameRequest:\"\",\r\n            passwordRequest:\"\",\r\n            logedUsername:\"\",\r\n            roles:\"\",\r\n            NoviFilm: false,\r\n            Users: false,\r\n            NovaProjekcija: false,\r\n            filmovi:[],\r\n            projekcije: [],\r\n            idProjekcije: false,\r\n            mojProfil:false\r\n        }\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n        this.handleToUpdateAdd=this.handleToUpdateAdd.bind(this)\r\n        this.handleToUpdateFilmovi=this.handleToUpdateFilmovi.bind(this)\r\n        this.handleToUpdateProjekcije=this.handleToUpdateProjekcije.bind(this)\r\n        this.handleToUpdateAddProjekcije=this.handleToUpdateAddProjekcije.bind(this)\r\n        this.setTrue=this.setTrue.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        $('#Registracija').hide()\r\n\r\n    }\r\n\r\n    handleClick(event){\r\n        \r\n        const name = event.target.name\r\n      /*  $('#Filmovi').hide()\r\n        $('#noviFilm').hide()\r\n        $('#NoviFilm').show()*/\r\n        this.setState({\r\n            NoviFilm: false,\r\n            Users: false,\r\n            NovaProjekcija: false,\r\n            idProjekcije: false,\r\n            mojProfil:false\r\n        })\r\n        if(name === \"logout\"){\r\n            window.location.reload()\r\n        }else if(name === \"Registracija\"){\r\n            $('#main').children().hide();\r\n            $('#idLogin').hide()\r\n            $('#Registracija').show()\r\n            $('#registracija').hide()\r\n        }else{\r\n            $('#main').children().hide();\r\n            this.setState({[name]:true})\r\n            $('#'+name).show()\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name,value} = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleToUpdateAdd(someArg){\r\n        this.state.filmovi.push(someArg)\r\n    }\r\n\r\n    handleToUpdateAddProjekcije(someArg){\r\n        this.state.projekcije.push(someArg)\r\n    }\r\n\r\n    handleToUpdateFilmovi(someArg){\r\n        this.setState({filmovi:someArg})\r\n    }\r\n\r\n    handleToUpdateProjekcije(someArg){\r\n        this.setState({projekcije:someArg})\r\n    }\r\n\r\n    setTrue(){\r\n        console.log(\"SetTrue\")\r\n        this.setState({idProjekcije:true})\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        if(this.state.usernameRequest === \"\" || this.state.passwordRequest === \"\"){\r\n            alert(\"--Polja za korisnicko ime i lozinku moraju biti popunjena!--\")\r\n        }else{\r\n            const userLogin={\r\n                username:this.state.usernameRequest,\r\n                password:this.state.passwordRequest\r\n            }\r\n            var config={\r\n                dataType: 'json',\r\n                method: 'post',\r\n                body: JSON.stringify(userLogin)\r\n              };\r\n    \r\n            fetch('http://localhost:8080/auth/login',config)\r\n              .then(response => {\r\n                    if(!response.ok){\r\n                        alert(\"Pogresno korisnicko ime ili lozinka!\")\r\n                        window.location.reload()\r\n                    }else{\r\n                        return response.json()\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    const jwt = res.accessToken;\r\n                    localStorage.setItem('jwt', jwt);\r\n                    const decodedJWTData = _decodeJWT(jwt);\r\n                    if (decodedJWTData != null) {\r\n                        this.setState({\r\n                            logedUsername:decodedJWTData.sub,\r\n                            roles:decodedJWTData.roles,\r\n                            passwordRequest:\"\",\r\n                            usernameRequest:\"\"\r\n                        })\r\n                    }\r\n                }) \r\n    \r\n            $('#idLogin').hide()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const buttons=this.state.logedUsername !== \"\" &&  <Buttons state={this.state} handleClick={this.handleClick}/>\r\n        const main=this.state.logedUsername !== \"\" && <Main setTrue={this.setTrue} state={this.state} handleToUpdateProjekcije={this.handleToUpdateProjekcije} handleToUpdateAddProjekcije={this.handleToUpdateAddProjekcije} handleToUpdateAdd={this.handleToUpdateAdd} handleToUpdateFilmovi={this.handleToUpdateFilmovi}/>\r\n        return(\r\n        <div id=\"Bioskop\">\r\n            <Login handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} state={this.state}/>\r\n            <Registracija/>\r\n            {buttons}\r\n            <br/>\r\n            {main}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Bioskop"]},"metadata":{},"sourceType":"module"}