{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\Praksa\\\\Bioskop\\\\src\\\\META-INf\\\\resources\\\\src\\\\Users.jsx\";\nimport React from \"react\";\nimport PrikazKorisnika from \"./PrikazSvihKorisnika\";\nimport FilterUsers from \"./FilterUsers\";\nimport $ from \"jquery\";\n\nclass Users extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/bioskop/users').then(res => res.json()).then(res => {\n      this.setState({\n        users: res\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState(prevState => {\n      const updateUsers = prevState.users.map(u => {\n        if (u.korisnickoIme === name) {\n          u.uloga = value;\n          var config = {\n            dataType: 'json',\n            method: 'put',\n            body: JSON.stringify(u)\n          }; // On submit of the form, send a POST request with the data to the server.\n\n          fetch('http://localhost:8080/bioskop/users', config).then(res => res.json()).then(res => console.log(res));\n        }\n\n        return u;\n      });\n      return {\n        users: updateUsers\n      };\n    });\n  }\n\n  filter() {\n    const username = $('#idUsername').val() === \"\" ? \"null\" : $('#idUsername').val();\n    const role = $('#idRole').val() === \"\" ? \"null\" : $('#idRole').val();\n    const sort = $('#idSort').val() === \"\" ? \"null\" : $('#idSort').val();\n    fetch('http://localhost:8080/bioskop/users/' + username + \"/\" + role + \"/\" + sort).then(res => res.json()).then(res => {\n      this.setState({\n        users: res\n      });\n    });\n  }\n\n  render() {\n    const prikaz = this.state.users.map(u => /*#__PURE__*/React.createElement(PrikazKorisnika, {\n      handleChange: this.handleChange,\n      key: u.korisnickoIme,\n      user: u,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 50\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterUsers, {\n      filter: this.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), prikaz), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, this.state.username, \" \", this.state.role));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/Praksa/Bioskop/src/META-INf/resources/src/Users.jsx"],"names":["React","PrikazKorisnika","FilterUsers","$","Users","Component","constructor","state","users","handleChange","bind","filter","componentDidMount","fetch","then","res","json","setState","event","name","value","target","prevState","updateUsers","map","u","korisnickoIme","uloga","config","dataType","method","body","JSON","stringify","console","log","username","val","role","sort","render","prikaz"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAE/BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAZ;AACH;;AAEDE,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,WAAKE,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEO;AADG,OAAd;AAGH,KANL;AAOH;;AAEDN,EAAAA,YAAY,CAACS,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKJ,QAAL,CAAcK,SAAS,IAAI;AACvB,YAAMC,WAAW,GAACD,SAAS,CAACd,KAAV,CAAgBgB,GAAhB,CAAoBC,CAAC,IAAI;AACvC,YAAGA,CAAC,CAACC,aAAF,KAAoBP,IAAvB,EAA4B;AACxBM,UAAAA,CAAC,CAACE,KAAF,GAAQP,KAAR;AACA,cAAIQ,MAAM,GAAC;AACPC,YAAAA,QAAQ,EAAE,MADH;AAEPC,YAAAA,MAAM,EAAE,KAFD;AAGPC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,CAAf;AAHC,WAAX,CAFwB,CAQxB;;AACAZ,UAAAA,KAAK,CAAC,qCAAD,EAAuCe,MAAvC,CAAL,CACKd,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAImB,OAAO,CAACC,GAAR,CAAYpB,GAAZ,CAFjB;AAGH;;AACD,eAAOU,CAAP;AACH,OAfiB,CAAlB;AAgBA,aAAO;AACHjB,QAAAA,KAAK,EAAEe;AADJ,OAAP;AAGH,KApBD;AAqBH;;AAEDZ,EAAAA,MAAM,GAAE;AACJ,UAAMyB,QAAQ,GAACjC,CAAC,CAAC,aAAD,CAAD,CAAiBkC,GAAjB,OAA2B,EAA3B,GAAgC,MAAhC,GAAuClC,CAAC,CAAC,aAAD,CAAD,CAAiBkC,GAAjB,EAAtD;AACA,UAAMC,IAAI,GAACnC,CAAC,CAAC,SAAD,CAAD,CAAakC,GAAb,OAAuB,EAAvB,GAA4B,MAA5B,GAAmClC,CAAC,CAAC,SAAD,CAAD,CAAakC,GAAb,EAA9C;AACA,UAAME,IAAI,GAACpC,CAAC,CAAC,SAAD,CAAD,CAAakC,GAAb,OAAuB,EAAvB,GAA4B,MAA5B,GAAmClC,CAAC,CAAC,SAAD,CAAD,CAAakC,GAAb,EAA9C;AAEAxB,IAAAA,KAAK,CAAC,yCAAuCuB,QAAvC,GAAgD,GAAhD,GAAoDE,IAApD,GAAyD,GAAzD,GAA6DC,IAA9D,CAAL,CACKzB,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,WAAKE,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEO;AADG,OAAd;AAGH,KANL;AAOH;;AAEDyB,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAG,KAAKlC,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAqBC,CAAC,iBAAI,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAE,KAAKhB,YAApC;AAAkD,MAAA,GAAG,EAAEgB,CAAC,CAACC,aAAzD;AAAwE,MAAA,IAAI,EAAED,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAf;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,MAAM,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKd,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK8B,MAFL,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKlC,KAAL,CAAW6B,QAAhB,OAA2B,KAAK7B,KAAL,CAAW+B,IAAtC,CALJ,CADJ;AASH;;AAvE8B;;AA0EnC,eAAelC,KAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport PrikazKorisnika from \"./PrikazSvihKorisnika\"\r\nimport FilterUsers from \"./FilterUsers\"\r\n\r\nimport $ from \"jquery\"\r\n\r\nclass Users extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: []\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.filter=this.filter.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('http://localhost:8080/bioskop/users')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name, value} = event.target\r\n        this.setState(prevState => {\r\n            const updateUsers=prevState.users.map(u => {\r\n                if(u.korisnickoIme === name){\r\n                    u.uloga=value\r\n                    var config={\r\n                        dataType: 'json',\r\n                        method: 'put',\r\n                        body: JSON.stringify(u)\r\n                      };\r\n            \r\n                    // On submit of the form, send a POST request with the data to the server.\r\n                    fetch('http://localhost:8080/bioskop/users',config)\r\n                        .then(res => res.json())\r\n                        .then(res => console.log(res))\r\n                }\r\n                return u;\r\n            })\r\n            return {\r\n                users: updateUsers\r\n            }\r\n        })\r\n    }\r\n\r\n    filter(){\r\n        const username=$('#idUsername').val() === \"\" ? \"null\":$('#idUsername').val();\r\n        const role=$('#idRole').val() === \"\" ? \"null\":$('#idRole').val();\r\n        const sort=$('#idSort').val() === \"\" ? \"null\":$('#idSort').val();\r\n\r\n        fetch('http://localhost:8080/bioskop/users/'+username+\"/\"+role+\"/\"+sort)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res\r\n                })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const prikaz = this.state.users.map(u => <PrikazKorisnika handleChange={this.handleChange} key={u.korisnickoIme} user={u} />)\r\n        return(\r\n            <div id=\"Users\">\r\n                <table border=\"1\">\r\n                    <FilterUsers filter={this.filter} />\r\n                    {prikaz}\r\n                </table>\r\n                <h1>{this.state.username} {this.state.role}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users"]},"metadata":{},"sourceType":"module"}