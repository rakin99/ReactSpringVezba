{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\Projekcije.jsx\";\nimport React, { Component } from \"react\";\nimport PrikazProjekcija from \"./PrikazProjekcija\";\nimport FilterProjekcija from \"./FilterProjekcija\";\n\nclass Projekcije extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projekcije: [],\n      saleZaIzbor: [],\n      tipoviZaIzbor: [\"2D\", \"3D\", \"4D\"],\n      tipProjekcije: \"\",\n      sala: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const conf = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    fetch('http://localhost:8080/bioskop/projekcije', conf).then(res => res.json()).then(response => {\n      this.setState({\n        projekcije: response\n      });\n    });\n  }\n\n  filter() {\n    const config = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    const naziv = $('#idFilm').val() === \"\" ? \"null\" : $('#idFilm').val();\n    const zanr = $('#idDatumOd').val() === \"\" ? \"null\" : $('#idDatumOd').val();\n    const idOd = $('#idDatumDo').val() === \"\" ? \"null\" : $('#idDatumDo').val();\n    const idDo = $('#idTip').val() === \"\" ? \"null\" : $('#idTip').val();\n    const dist = $('#idSala').val() === \"\" ? \"null\" : $('#idSala').val();\n    const zemlja = $('#idCenaOd').val() === \"\" ? \"null\" : $('#idCenaOd').val();\n    const idGodOd = $('#idCenaDo').val() === \"\" ? \"null\" : $('#idCenaDo').val();\n    const sort = $('#idSortProjekcije').val() === \"\" ? \"null\" : $('#idSortFilmovi').val();\n    fetch('http://localhost:8080/bioskop/filmovi/' + naziv + \"/\" + zanr + \"/\" + idOd + \"/\" + idDo + \"/\" + dist + \"/\" + zemlja + \"/\" + idGodOd + \"/\" + idGodDo + \"/\" + sort, config).then(res => res.json()).then(res => {\n      this.setState({\n        filmovi: res\n      });\n    });\n  }\n\n  render() {\n    const prikaz = this.state.projekcije.map(p => /*#__PURE__*/React.createElement(PrikazProjekcija, {\n      key: p.id,\n      projekcija: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 53\n      }\n    }));\n    /*const prikazFilma=this.state.film !== \"\" && <Film state={this.props.state} cancel={this.cancel} editFilm={this.editFilm} deleteFilm={this.deleteFilm} film={this.state.film} />\r\n    const editFilma=this.state.editFilm !== \"\" && <EditFilm handleSubmit={this.handleSubmit} \r\n                                                    cancel={this.cancel} handleChange={this.handleChange} \r\n                                                    film={this.state.editFilm} />*/\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"idProjekcije\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"tableProjekcije\",\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterProjekcija, {\n      filter: this.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), prikaz));\n  }\n\n}\n\nexport default Projekcije;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/Projekcije.jsx"],"names":["React","Component","PrikazProjekcija","FilterProjekcija","Projekcije","constructor","state","projekcije","saleZaIzbor","tipoviZaIzbor","tipProjekcije","sala","componentDidMount","conf","headers","Headers","localStorage","getItem","fetch","then","res","json","response","setState","filter","config","naziv","$","val","zanr","idOd","idDo","dist","zemlja","idGodOd","sort","idGodDo","filmovi","render","prikaz","map","p","id"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport PrikazProjekcija from \"./PrikazProjekcija\"\r\nimport FilterProjekcija from \"./FilterProjekcija\"\r\n\r\nclass Projekcije extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            projekcije:[],\r\n            saleZaIzbor:[],\r\n            tipoviZaIzbor:[\"2D\", \"3D\", \"4D\"],\r\n            tipProjekcije:\"\",\r\n            sala:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const conf={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        fetch('http://localhost:8080/bioskop/projekcije',conf)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    projekcije: response\r\n            })\r\n        })\r\n    }\r\n\r\n    filter(){\r\n\r\n        const config={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        const naziv=$('#idFilm').val() === \"\" ? \"null\":$('#idFilm').val();\r\n        const zanr=$('#idDatumOd').val() === \"\" ? \"null\":$('#idDatumOd').val();\r\n        const idOd=$('#idDatumDo').val() === \"\" ? \"null\":$('#idDatumDo').val();\r\n        const idDo=$('#idTip').val() === \"\" ? \"null\":$('#idTip').val();\r\n        const dist=$('#idSala').val() === \"\" ? \"null\":$('#idSala').val();\r\n        const zemlja=$('#idCenaOd').val() === \"\" ? \"null\":$('#idCenaOd').val();\r\n        const idGodOd=$('#idCenaDo').val() === \"\" ? \"null\":$('#idCenaDo').val();\r\n        const sort=$('#idSortProjekcije').val() === \"\" ? \"null\":$('#idSortFilmovi').val();\r\n\r\n        fetch('http://localhost:8080/bioskop/filmovi/'+naziv+\"/\"+zanr+\"/\"+idOd+\"/\"+idDo+\"/\"+dist+\"/\"+zemlja+\"/\"+idGodOd+\"/\"+idGodDo+\"/\"+sort,config)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    filmovi: res\r\n                })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const prikaz=this.state.projekcije.map(p => <PrikazProjekcija key={p.id} projekcija={p} />)\r\n        /*const prikazFilma=this.state.film !== \"\" && <Film state={this.props.state} cancel={this.cancel} editFilm={this.editFilm} deleteFilm={this.deleteFilm} film={this.state.film} />\r\n        const editFilma=this.state.editFilm !== \"\" && <EditFilm handleSubmit={this.handleSubmit} \r\n                                                        cancel={this.cancel} handleChange={this.handleChange} \r\n                                                        film={this.state.editFilm} />*/\r\n\r\n        return(\r\n            <div id=\"idProjekcije\">\r\n                <table id=\"tableProjekcije\" border=\"1\">\r\n                    <FilterProjekcija filter={this.filter} />\r\n                    {prikaz}\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projekcije"]},"metadata":{},"sourceType":"module"}