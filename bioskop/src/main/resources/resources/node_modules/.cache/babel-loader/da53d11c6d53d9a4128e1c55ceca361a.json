{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\Projekcije.jsx\";\nimport React, { Component } from \"react\";\nimport PrikazProjekcija from \"./PrikazProjekcija\";\n\nclass Projekcije extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projekcije: []\n    };\n  }\n\n  componentDidMount() {\n    const conf = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    fetch('http://localhost:8080/bioskop/projekcije', conf).then(res => res.json()).then(response => {\n      this.setState({\n        projekcije: response\n      });\n    });\n  }\n\n  render() {\n    const prikaz = this.state.projekcije.map(f => /*#__PURE__*/React.createElement(PrikazProjekcija, {\n      key: f.id,\n      film: f,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 53\n      }\n    }));\n    const prikazFilma = this.state.film !== \"\" && /*#__PURE__*/React.createElement(Film, {\n      state: this.props.state,\n      cancel: this.cancel,\n      editFilm: this.editFilm,\n      deleteFilm: this.deleteFilm,\n      film: this.state.film,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 53\n      }\n    });\n    const editFilma = this.state.editFilm !== \"\" && /*#__PURE__*/React.createElement(EditFilm, {\n      handleSubmit: this.handleSubmit,\n      cancel: this.cancel,\n      handleChange: this.handleChange,\n      film: this.state.editFilm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 55\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"idProjekcije\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Projekcije;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/Projekcije.jsx"],"names":["React","Component","PrikazProjekcija","Projekcije","constructor","state","projekcije","componentDidMount","conf","headers","Headers","localStorage","getItem","fetch","then","res","json","response","setState","render","prikaz","map","f","id","prikazFilma","film","props","cancel","editFilm","deleteFilm","editFilma","handleSubmit","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC;AADF,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,IAAI,GAAC;AACPC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAA9B,OAAZ,EACa;AAAC,wCAA+B;AAAhC,OADb;AADF,KAAX;AAKAC,IAAAA,KAAK,CAAC,0CAAD,EAA4CL,IAA5C,CAAL,CACKM,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVZ,QAAAA,UAAU,EAAEW;AADF,OAAd;AAGP,KAND;AAOH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAC,KAAKf,KAAL,CAAWC,UAAX,CAAsBe,GAAtB,CAA0BC,CAAC,iBAAI,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAzB;AAA6B,MAAA,IAAI,EAAED,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAAb;AACA,UAAME,WAAW,GAAC,KAAKnB,KAAL,CAAWoB,IAAX,KAAoB,EAApB,iBAA0B,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWrB,KAAxB;AAA+B,MAAA,MAAM,EAAE,KAAKsB,MAA5C;AAAoD,MAAA,QAAQ,EAAE,KAAKC,QAAnE;AAA6E,MAAA,UAAU,EAAE,KAAKC,UAA9F;AAA0G,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWoB,IAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C;AACA,UAAMK,SAAS,GAAC,KAAKzB,KAAL,CAAWuB,QAAX,KAAwB,EAAxB,iBAA8B,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKG,YAA7B;AACE,MAAA,MAAM,EAAE,KAAKJ,MADf;AACuB,MAAA,YAAY,EAAE,KAAKK,YAD1C;AAEE,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWuB,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C;AAIA,wBACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AApC6B;;AAuClC,eAAezB,UAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport PrikazProjekcija from \"./PrikazProjekcija\"\r\n\r\nclass Projekcije extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            projekcije:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const conf={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        fetch('http://localhost:8080/bioskop/projekcije',conf)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    projekcije: response\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const prikaz=this.state.projekcije.map(f => <PrikazProjekcija key={f.id} film={f} />)\r\n        const prikazFilma=this.state.film !== \"\" && <Film state={this.props.state} cancel={this.cancel} editFilm={this.editFilm} deleteFilm={this.deleteFilm} film={this.state.film} />\r\n        const editFilma=this.state.editFilm !== \"\" && <EditFilm handleSubmit={this.handleSubmit} \r\n                                                        cancel={this.cancel} handleChange={this.handleChange} \r\n                                                        film={this.state.editFilm} />\r\n\r\n        return(\r\n            <div id=\"idProjekcije\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projekcije"]},"metadata":{},"sourceType":"module"}