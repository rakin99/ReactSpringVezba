{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\Praksa\\\\Bioskop\\\\src\\\\META-INf\\\\resources\\\\src\\\\Filmovi.jsx\";\nimport React, { Component } from \"react\";\nimport FilterFilmova from \"./FilterFilmova\";\nimport PrikazFilmova from \"./PrikazFilmova\";\nimport Film from \"./Film\";\nimport EditFilm from \"./EditFilm\";\nimport $ from \"jquery\";\n\nclass Filmovi extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filmovi: [],\n      film: \"\",\n      editFilm: {\n        naziv: \"\",\n        reziser: \"\",\n        glumci: \"\",\n        zanrovi: \"\",\n        trajanje: \"\",\n        distributer: \"\",\n        zemljaPorekla: \"\",\n        godinaProizvodnje: \"\",\n        opis: \"\"\n      }\n    };\n    this.filter = this.filter.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.deleteFilm = this.deleteFilm.bind(this);\n    this.editFilm = this.editFilm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/bioskop/filmovi').then(res => res.json()).then(response => {\n      this.setState({\n        filmovi: response\n      });\n    });\n  }\n\n  filter() {\n    const naziv = $('#idNaziv').val() === \"\" ? \"null\" : $('#idNaziv').val();\n    const zanr = $('#idZanr').val() === \"\" ? \"null\" : $('#idZanr').val();\n    const idOd = $('#idOd').val() === \"\" ? \"null\" : $('#idOd').val();\n    const idDo = $('#idDo').val() === \"\" ? \"null\" : $('#idDo').val();\n    const dist = $('#idDist').val() === \"\" ? \"null\" : $('#idDist').val();\n    const zemlja = $('#idZemlja').val() === \"\" ? \"null\" : $('#idZemlja').val();\n    const idGodOd = $('#idGodOd').val() === \"\" ? \"null\" : $('#idGodOd').val();\n    const idGodDo = $('#idGodDo').val() === \"\" ? \"null\" : $('#idGodDo').val();\n    const sort = $('#idSortFilmovi').val() === \"\" ? \"null\" : $('#idSortFilmovi').val();\n    fetch('http://localhost:8080/bioskop/filmovi/' + naziv + \"/\" + zanr + \"/\" + idOd + \"/\" + idDo + \"/\" + dist + \"/\" + zemlja + \"/\" + idGodOd + \"/\" + idGodDo + \"/\" + sort).then(res => res.json()).then(res => {\n      this.setState({\n        filmovi: res\n      });\n    });\n  }\n\n  handleChange(event) {\n    console.log(\"Handle change\");\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState(prevState => {\n      const updateEditFilm = prevState.editFilm = {\n        [name]: value\n      };\n      /* var config={\r\n           dataType: 'json',\r\n           method: 'put',\r\n           body: JSON.stringify(u)\r\n         };\r\n                     // On submit of the form, send a POST request with the data to the server.\r\n       fetch('http://localhost:8080/bioskop/users',config)\r\n           .then(res => res.json())\r\n           .then(res => console.log(res))*/\n\n      return {\n        editFilm: updateEditFilm\n      };\n    });\n  }\n\n  handleClick(event) {\n    const id = event.target.name;\n    this.state.filmovi.map(f => {\n      if (f.id == id) {\n        this.setState({\n          film: f\n        });\n      }\n    });\n    $('#tableFilmovi').hide();\n  }\n\n  deleteFilm(event) {\n    const id = event.target.name;\n    var config = {\n      method: 'delete'\n    };\n    fetch('http://localhost:8080/bioskop/filmovi/' + id, config);\n    this.setState({\n      user: \"\"\n    });\n    this.setState(prevState => {\n      const updateFilmovi = prevState.filmovi.filter(u => u.id != id);\n      return {\n        filmovi: updateFilmovi\n      };\n    });\n    window.location.reload();\n  }\n\n  cancel() {\n    window.location.reload();\n  }\n\n  editFilm(event) {\n    this.setState({\n      user: \"\"\n    });\n    const id = event.target.name;\n    this.state.filmovi.map(f => {\n      if (f.id == id) {\n        this.setState({\n          editFilm: f\n        });\n      }\n    });\n    $('#idFilm').hide();\n  }\n\n  render() {\n    const prikaz = this.state.filmovi.map(f => /*#__PURE__*/React.createElement(PrikazFilmova, {\n      handleClick: this.handleClick,\n      key: f.id,\n      film: f,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 50\n      }\n    }));\n    const prikazFilma = this.state.film !== \"\" && /*#__PURE__*/React.createElement(Film, {\n      editFilm: this.editFilm,\n      deleteFilm: this.deleteFilm,\n      film: this.state.film,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 53\n      }\n    });\n    const editFilma = this.state.editFilm !== \"\" && /*#__PURE__*/React.createElement(EditFilm, {\n      cancel: this.cancel,\n      handleChange: this.handleChange,\n      film: this.state.editFilm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 55\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Filmovi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"tableFilmovi\",\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilmova, {\n      filter: this.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), prikaz), prikazFilma, editFilma, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.editFilm)));\n  }\n\n}\n\nexport default Filmovi;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/Praksa/Bioskop/src/META-INf/resources/src/Filmovi.jsx"],"names":["React","Component","FilterFilmova","PrikazFilmova","Film","EditFilm","$","Filmovi","constructor","state","filmovi","film","editFilm","naziv","reziser","glumci","zanrovi","trajanje","distributer","zemljaPorekla","godinaProizvodnje","opis","filter","bind","handleClick","deleteFilm","handleChange","cancel","componentDidMount","fetch","then","res","json","response","setState","val","zanr","idOd","idDo","dist","zemlja","idGodOd","idGodDo","sort","event","console","log","name","value","target","prevState","updateEditFilm","id","map","f","hide","config","method","user","updateFilmovi","u","window","location","reload","render","prikaz","prikazFilma","editFilma","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAA+B;AAE3BO,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,IAAI,EAAC,EAFI;AAGTC,MAAAA,QAAQ,EAAC;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,OAAO,EAAE,EAFJ;AAGLC,QAAAA,MAAM,EAAE,EAHH;AAILC,QAAAA,OAAO,EAAE,EAJJ;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,WAAW,EAAE,EANR;AAOLC,QAAAA,aAAa,EAAE,EAPV;AAQLC,QAAAA,iBAAiB,EAAE,EARd;AASLC,QAAAA,IAAI,EAAE;AATD;AAHA,KAAb;AAeA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAZ;AACA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKE,UAAL,GAAgB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKX,QAAL,GAAc,KAAKA,QAAL,CAAcW,IAAd,CAAmB,IAAnB,CAAd;AACA,SAAKG,YAAL,GAAkB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKI,MAAL,GAAY,KAAKA,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAZ;AACH;;AAEDK,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVxB,QAAAA,OAAO,EAAEuB;AADC,OAAd;AAGP,KAND;AAOH;;AAEDX,EAAAA,MAAM,GAAE;AACJ,UAAMT,KAAK,GAACP,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,OAAwB,EAAxB,GAA6B,MAA7B,GAAoC7B,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,EAAhD;AACA,UAAMC,IAAI,GAAC9B,CAAC,CAAC,SAAD,CAAD,CAAa6B,GAAb,OAAuB,EAAvB,GAA4B,MAA5B,GAAmC7B,CAAC,CAAC,SAAD,CAAD,CAAa6B,GAAb,EAA9C;AACA,UAAME,IAAI,GAAC/B,CAAC,CAAC,OAAD,CAAD,CAAW6B,GAAX,OAAqB,EAArB,GAA0B,MAA1B,GAAiC7B,CAAC,CAAC,OAAD,CAAD,CAAW6B,GAAX,EAA5C;AACA,UAAMG,IAAI,GAAChC,CAAC,CAAC,OAAD,CAAD,CAAW6B,GAAX,OAAqB,EAArB,GAA0B,MAA1B,GAAiC7B,CAAC,CAAC,OAAD,CAAD,CAAW6B,GAAX,EAA5C;AACA,UAAMI,IAAI,GAACjC,CAAC,CAAC,SAAD,CAAD,CAAa6B,GAAb,OAAuB,EAAvB,GAA4B,MAA5B,GAAmC7B,CAAC,CAAC,SAAD,CAAD,CAAa6B,GAAb,EAA9C;AACA,UAAMK,MAAM,GAAClC,CAAC,CAAC,WAAD,CAAD,CAAe6B,GAAf,OAAyB,EAAzB,GAA8B,MAA9B,GAAqC7B,CAAC,CAAC,WAAD,CAAD,CAAe6B,GAAf,EAAlD;AACA,UAAMM,OAAO,GAACnC,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,OAAwB,EAAxB,GAA6B,MAA7B,GAAoC7B,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,EAAlD;AACA,UAAMO,OAAO,GAACpC,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,OAAwB,EAAxB,GAA6B,MAA7B,GAAoC7B,CAAC,CAAC,UAAD,CAAD,CAAc6B,GAAd,EAAlD;AACA,UAAMQ,IAAI,GAACrC,CAAC,CAAC,gBAAD,CAAD,CAAoB6B,GAApB,OAA8B,EAA9B,GAAmC,MAAnC,GAA0C7B,CAAC,CAAC,gBAAD,CAAD,CAAoB6B,GAApB,EAArD;AAEAN,IAAAA,KAAK,CAAC,2CAAyChB,KAAzC,GAA+C,GAA/C,GAAmDuB,IAAnD,GAAwD,GAAxD,GAA4DC,IAA5D,GAAiE,GAAjE,GAAqEC,IAArE,GAA0E,GAA1E,GAA8EC,IAA9E,GAAmF,GAAnF,GAAuFC,MAAvF,GAA8F,GAA9F,GAAkGC,OAAlG,GAA0G,GAA1G,GAA8GC,OAA9G,GAAsH,GAAtH,GAA0HC,IAA3H,CAAL,CACKb,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,WAAKG,QAAL,CAAc;AACVxB,QAAAA,OAAO,EAAEqB;AADC,OAAd;AAGH,KANL;AAOH;;AAEDL,EAAAA,YAAY,CAACkB,KAAD,EAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBJ,KAAK,CAACK,MAA5B;AACA,SAAKf,QAAL,CAAcgB,SAAS,IAAI;AACvB,YAAMC,cAAc,GAACD,SAAS,CAACtC,QAAV,GAAmB;AAAC,SAACmC,IAAD,GAAOC;AAAR,OAAxC;AACO;;;;;;;;;;AAUP,aAAO;AACHpC,QAAAA,QAAQ,EAAEuC;AADP,OAAP;AAGH,KAfD;AAgBH;;AAED3B,EAAAA,WAAW,CAACoB,KAAD,EAAO;AACd,UAAMQ,EAAE,GAACR,KAAK,CAACK,MAAN,CAAaF,IAAtB;AACA,SAAKtC,KAAL,CAAWC,OAAX,CAAmB2C,GAAnB,CAAuBC,CAAC,IAAI;AACxB,UAAGA,CAAC,CAACF,EAAF,IAAQA,EAAX,EAAc;AACV,aAAKlB,QAAL,CAAc;AAACvB,UAAAA,IAAI,EAAC2C;AAAN,SAAd;AACH;AACJ,KAJD;AAKAhD,IAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBiD,IAAnB;AACH;;AAED9B,EAAAA,UAAU,CAACmB,KAAD,EAAO;AACb,UAAMQ,EAAE,GAAGR,KAAK,CAACK,MAAN,CAAaF,IAAxB;AACA,QAAIS,MAAM,GAAC;AACPC,MAAAA,MAAM,EAAE;AADD,KAAX;AAIA5B,IAAAA,KAAK,CAAC,2CAAyCuB,EAA1C,EAA6CI,MAA7C,CAAL;AAEA,SAAKtB,QAAL,CAAc;AACVwB,MAAAA,IAAI,EAAE;AADI,KAAd;AAIA,SAAKxB,QAAL,CAAcgB,SAAS,IAAI;AACvB,YAAMS,aAAa,GAACT,SAAS,CAACxC,OAAV,CAAkBY,MAAlB,CAAyBsC,CAAC,IAAIA,CAAC,CAACR,EAAF,IAAQA,EAAtC,CAApB;AACA,aAAO;AACH1C,QAAAA,OAAO,EAAEiD;AADN,OAAP;AAGH,KALD;AAOAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDpC,EAAAA,MAAM,GAAE;AACJkC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDnD,EAAAA,QAAQ,CAACgC,KAAD,EAAO;AACX,SAAKV,QAAL,CAAc;AACVwB,MAAAA,IAAI,EAAE;AADI,KAAd;AAGA,UAAMN,EAAE,GAACR,KAAK,CAACK,MAAN,CAAaF,IAAtB;AACA,SAAKtC,KAAL,CAAWC,OAAX,CAAmB2C,GAAnB,CAAuBC,CAAC,IAAI;AACxB,UAAGA,CAAC,CAACF,EAAF,IAAQA,EAAX,EAAc;AACV,aAAKlB,QAAL,CAAc;AAACtB,UAAAA,QAAQ,EAAC0C;AAAV,SAAd;AACH;AACJ,KAJD;AAKAhD,IAAAA,CAAC,CAAC,SAAD,CAAD,CAAaiD,IAAb;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAC,KAAKxD,KAAL,CAAWC,OAAX,CAAmB2C,GAAnB,CAAuBC,CAAC,iBAAI,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAE,KAAK9B,WAAjC;AAA8C,MAAA,GAAG,EAAE8B,CAAC,CAACF,EAArD;AAAyD,MAAA,IAAI,EAAEE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAAb;AACA,UAAMY,WAAW,GAAC,KAAKzD,KAAL,CAAWE,IAAX,KAAoB,EAApB,iBAA0B,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,UAAU,EAAE,KAAKa,UAAhD;AAA4D,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWE,IAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C;AACA,UAAMwD,SAAS,GAAC,KAAK1D,KAAL,CAAWG,QAAX,KAAwB,EAAxB,iBAA8B,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKe,MAAvB;AAA+B,MAAA,YAAY,EAAE,KAAKD,YAAlD;AAAgE,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWG,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,MAAM,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,KAAKU,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK2C,MAFL,CADJ,EAKKC,WALL,EAMKC,SANL,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACC,SAAL,CAAe,KAAK5D,KAAL,CAAWG,QAA1B,CAAL,CAPJ,CADJ;AAWH;;AA9I0B;;AAkJ/B,eAAeL,OAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nimport FilterFilmova from \"./FilterFilmova\"\r\nimport PrikazFilmova from \"./PrikazFilmova\"\r\nimport Film from \"./Film\"\r\nimport EditFilm from \"./EditFilm\"\r\n\r\nimport $ from \"jquery\"\r\n\r\nclass Filmovi extends Component{\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            filmovi: [],\r\n            film:\"\",\r\n            editFilm:{\r\n                naziv: \"\",\r\n                reziser: \"\",\r\n                glumci: \"\",\r\n                zanrovi: \"\",\r\n                trajanje: \"\",\r\n                distributer: \"\",\r\n                zemljaPorekla: \"\",\r\n                godinaProizvodnje: \"\",\r\n                opis: \"\"\r\n            }\r\n        }\r\n        this.filter=this.filter.bind(this)\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.deleteFilm=this.deleteFilm.bind(this)\r\n        this.editFilm=this.editFilm.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.cancel=this.cancel.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('http://localhost:8080/bioskop/filmovi')\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    filmovi: response\r\n            })\r\n        })\r\n    }\r\n\r\n    filter(){\r\n        const naziv=$('#idNaziv').val() === \"\" ? \"null\":$('#idNaziv').val();\r\n        const zanr=$('#idZanr').val() === \"\" ? \"null\":$('#idZanr').val();\r\n        const idOd=$('#idOd').val() === \"\" ? \"null\":$('#idOd').val();\r\n        const idDo=$('#idDo').val() === \"\" ? \"null\":$('#idDo').val();\r\n        const dist=$('#idDist').val() === \"\" ? \"null\":$('#idDist').val();\r\n        const zemlja=$('#idZemlja').val() === \"\" ? \"null\":$('#idZemlja').val();\r\n        const idGodOd=$('#idGodOd').val() === \"\" ? \"null\":$('#idGodOd').val();\r\n        const idGodDo=$('#idGodDo').val() === \"\" ? \"null\":$('#idGodDo').val();\r\n        const sort=$('#idSortFilmovi').val() === \"\" ? \"null\":$('#idSortFilmovi').val();\r\n\r\n        fetch('http://localhost:8080/bioskop/filmovi/'+naziv+\"/\"+zanr+\"/\"+idOd+\"/\"+idDo+\"/\"+dist+\"/\"+zemlja+\"/\"+idGodOd+\"/\"+idGodDo+\"/\"+sort)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    filmovi: res\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(event){\r\n        console.log(\"Handle change\")\r\n        const {name, value} = event.target\r\n        this.setState(prevState => {\r\n            const updateEditFilm=prevState.editFilm={[name]:value}\r\n                   /* var config={\r\n                        dataType: 'json',\r\n                        method: 'put',\r\n                        body: JSON.stringify(u)\r\n                      };\r\n            \r\n                    // On submit of the form, send a POST request with the data to the server.\r\n                    fetch('http://localhost:8080/bioskop/users',config)\r\n                        .then(res => res.json())\r\n                        .then(res => console.log(res))*/\r\n            return {\r\n                editFilm: updateEditFilm\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick(event){\r\n        const id=event.target.name\r\n        this.state.filmovi.map(f => {\r\n            if(f.id == id){\r\n                this.setState({film:f})\r\n            }\r\n        })\r\n        $('#tableFilmovi').hide();\r\n    }\r\n\r\n    deleteFilm(event){\r\n        const id = event.target.name\r\n        var config={\r\n            method: 'delete',\r\n          };\r\n\r\n        fetch('http://localhost:8080/bioskop/filmovi/'+id,config)\r\n\r\n        this.setState({\r\n            user: \"\"\r\n        })\r\n        \r\n        this.setState(prevState => {\r\n            const updateFilmovi=prevState.filmovi.filter(u => u.id != id)\r\n            return {\r\n                filmovi: updateFilmovi\r\n            }\r\n        })\r\n        \r\n        window.location.reload();\r\n    }\r\n\r\n    cancel(){\r\n        window.location.reload();\r\n    }\r\n\r\n    editFilm(event){\r\n        this.setState({\r\n            user: \"\"\r\n        })\r\n        const id=event.target.name\r\n        this.state.filmovi.map(f => {\r\n            if(f.id == id){\r\n                this.setState({editFilm:f})\r\n            }\r\n        })\r\n        $('#idFilm').hide()\r\n    }\r\n\r\n    render(){\r\n        const prikaz=this.state.filmovi.map(f => <PrikazFilmova handleClick={this.handleClick} key={f.id} film={f} />)\r\n        const prikazFilma=this.state.film !== \"\" && <Film editFilm={this.editFilm} deleteFilm={this.deleteFilm} film={this.state.film} />\r\n        const editFilma=this.state.editFilm !== \"\" && <EditFilm cancel={this.cancel} handleChange={this.handleChange} film={this.state.editFilm} />\r\n        return(\r\n            <div id=\"Filmovi\">\r\n                <table id=\"tableFilmovi\" border=\"1\">\r\n                    <FilterFilmova filter={this.filter} />\r\n                    {prikaz}\r\n                </table>\r\n                {prikazFilma}\r\n                {editFilma}\r\n                <h1>{JSON.stringify(this.state.editFilm)}</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Filmovi"]},"metadata":{},"sourceType":"module"}