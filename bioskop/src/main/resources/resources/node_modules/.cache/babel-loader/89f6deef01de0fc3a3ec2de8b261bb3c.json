{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\Praksa\\\\Bioskop\\\\src\\\\META-INf\\\\resources\\\\src\\\\Users.jsx\";\nimport React from \"react\";\nimport PrikazKorisnika from \"./PrikazKorisnika\";\n\nclass Users extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/bioskop/users').then(res => res.json()).then(res => {\n      this.setState({\n        users: res\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState(prevState => {\n      const updateUsers = prevState.users.map(u => {\n        if (u.korisnickoIme === name) {\n          u.uloga = value;\n        }\n\n        return u;\n      });\n      return {\n        users: updateUsers\n      };\n    });\n    const updateUser = this.state.users.map(u => u.korisnickoIme === name && u)[0];\n    var config = {\n      dataType: 'json',\n      method: 'put',\n      body: JSON.stringify(updateUser)\n    }; // On submit of the form, send a POST request with the data to the server.\n\n    fetch('http://localhost:8080/bioskop/users', config).then(res => res.json()).then(res => console.log(res));\n  }\n\n  render() {\n    const prikaz = this.state.users.map(u => /*#__PURE__*/React.createElement(PrikazKorisnika, {\n      handleChange: this.handleChange,\n      key: u.korisnickoIme,\n      user: u,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Korisnicko ime\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Datum registracije\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Uloga\"))), prikaz));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/Praksa/Bioskop/src/META-INf/resources/src/Users.jsx"],"names":["React","PrikazKorisnika","Users","Component","constructor","state","users","handleChange","bind","componentDidMount","fetch","then","res","json","setState","event","name","value","target","prevState","updateUsers","map","u","korisnickoIme","uloga","updateUser","config","dataType","method","body","JSON","stringify","console","log","render","prikaz"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAE/BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,WAAKE,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEM;AADG,OAAd;AAGH,KANL;AAOH;;AAEDL,EAAAA,YAAY,CAACQ,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKJ,QAAL,CAAcK,SAAS,IAAI;AACvB,YAAMC,WAAW,GAACD,SAAS,CAACb,KAAV,CAAgBe,GAAhB,CAAoBC,CAAC,IAAI;AACvC,YAAGA,CAAC,CAACC,aAAF,KAAoBP,IAAvB,EAA4B;AACxBM,UAAAA,CAAC,CAACE,KAAF,GAAQP,KAAR;AACH;;AACD,eAAOK,CAAP;AACH,OALiB,CAAlB;AAMA,aAAO;AACHhB,QAAAA,KAAK,EAAEc;AADJ,OAAP;AAGH,KAVD;AAWA,UAAMK,UAAU,GAAC,KAAKpB,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,aAAF,KAAoBP,IAApB,IAA4BM,CAAtD,EAAyD,CAAzD,CAAjB;AACA,QAAII,MAAM,GAAC;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,MAAM,EAAE,KAFD;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf;AAHC,KAAX,CAde,CAoBf;;AACAf,IAAAA,KAAK,CAAC,qCAAD,EAAuCgB,MAAvC,CAAL,CACKf,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIoB,OAAO,CAACC,GAAR,CAAYrB,GAAZ,CAFjB;AAGH;;AAEDsB,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAG,KAAK9B,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,CAAC,iBAAI,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAE,KAAKf,YAApC;AAAkD,MAAA,GAAG,EAAEe,CAAC,CAACC,aAAzD;AAAwE,MAAA,IAAI,EAAED,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAf;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,MAAM,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ,CADJ,EAQKa,MARL,CADJ,CADJ;AAcH;;AA9D8B;;AAiEnC,eAAejC,KAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport PrikazKorisnika from \"./PrikazKorisnika\"\r\n\r\nclass Users extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: []\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('http://localhost:8080/bioskop/users')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name, value} = event.target\r\n        this.setState(prevState => {\r\n            const updateUsers=prevState.users.map(u => {\r\n                if(u.korisnickoIme === name){\r\n                    u.uloga=value\r\n                }\r\n                return u;\r\n            })\r\n            return {\r\n                users: updateUsers\r\n            }\r\n        })\r\n        const updateUser=this.state.users.map(u => u.korisnickoIme === name && u)[0]\r\n        var config={\r\n            dataType: 'json',\r\n            method: 'put',\r\n            body: JSON.stringify(updateUser)\r\n          };\r\n\r\n        // On submit of the form, send a POST request with the data to the server.\r\n        fetch('http://localhost:8080/bioskop/users',config)\r\n            .then(res => res.json())\r\n            .then(res => console.log(res))\r\n    }\r\n\r\n    render(){\r\n        const prikaz = this.state.users.map(u => <PrikazKorisnika handleChange={this.handleChange} key={u.korisnickoIme} user={u} />)\r\n        return(\r\n            <div id=\"Users\">\r\n                <table border=\"1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Korisnicko ime</th>\r\n                            <th>Datum registracije</th>\r\n                            <th>Uloga</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {prikaz}\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users"]},"metadata":{},"sourceType":"module"}