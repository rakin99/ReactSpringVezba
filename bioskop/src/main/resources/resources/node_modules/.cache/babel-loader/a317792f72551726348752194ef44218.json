{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\Bioskop.jsx\";\nimport React from \"react\";\nimport Login from \"./Login\";\nimport Buttons from \"./Buttons\";\nimport Main from \"./Main\";\nimport Registracija from \"./Registracija\";\nimport $ from \"jquery\";\nimport _decodeJWT from 'jwt-decode';\n\nclass Bioskop extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      usernameRequest: \"\",\n      passwordRequest: \"\",\n      logedUsername: \"\",\n      roles: \"\",\n      NoviFilm: false,\n      Users: false,\n      NovaProjekcija: false,\n      filmovi: [],\n      projekcije: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToUpdateAdd = this.handleToUpdateAdd.bind(this);\n    this.handleToUpdateDelete = this.handleToUpdateDelete.bind(this);\n  }\n\n  componentDidMount() {\n    $('#Registracija').hide();\n  }\n\n  handleClick(event) {\n    const name = event.target.name;\n    console.log(\"HandleClick: \" + name);\n    /*  $('#Filmovi').hide()\r\n      $('#noviFilm').hide()\r\n      $('#NoviFilm').show()*/\n\n    if (name === \"logout\") {\n      window.location.reload();\n    } else if (name === \"Registracija\") {\n      $('#main').children().hide();\n      $('#idLogin').hide();\n      $('#Registracija').show();\n      $('#registracija').hide();\n    } else {\n      $('#main').children().hide();\n      this.setState({\n        [name]: true\n      });\n      $('#' + name).show();\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleToUpdateAdd(someArg) {\n    this.setState(prevState => {\n      const updateFilmovi = prevState.filmovi.push(someArg);\n      return {\n        filmovi: updateFilmovi\n      };\n    });\n  }\n\n  handleToUpdateDelete(someArg) {\n    console.log(\"Filmovi iz podklase: \" + JSON.stringify(someArg));\n    this.setState({\n      filmovi: someArg\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const userLogin = {\n      username: this.state.usernameRequest,\n      password: this.state.passwordRequest\n    };\n    var config = {\n      dataType: 'json',\n      method: 'post',\n      body: JSON.stringify(userLogin)\n    };\n    fetch('http://localhost:8080/auth/login', config).then(res => res.json()).then(res => {\n      const jwt = res.accessToken;\n      localStorage.setItem('jwt', jwt);\n\n      const decodedJWTData = _decodeJWT(jwt);\n\n      if (decodedJWTData != null) {\n        this.setState({\n          logedUsername: decodedJWTData.sub,\n          roles: decodedJWTData.roles,\n          passwordRequest: \"\",\n          usernameRequest: \"\"\n        });\n      }\n    });\n    const conf = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    fetch('http://localhost:8080/bioskop/projekcije', conf).then(res => res.json()).then(response => {\n      this.setState({\n        projekcije: response\n      });\n    });\n    $('#idLogin').hide();\n  }\n\n  render() {\n    const buttons = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Buttons, {\n      state: this.state,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 59\n      }\n    });\n    const main = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Main, {\n      state: this.state,\n      handleToUpdateAdd: this.handleToUpdateAdd,\n      handleToUpdateDelete: this.handleToUpdateDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 55\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Bioskop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      handleClick: this.handleClick,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Registracija, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), buttons, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), main);\n  }\n\n}\n\nexport default Bioskop;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/Bioskop.jsx"],"names":["React","Login","Buttons","Main","Registracija","$","_decodeJWT","Bioskop","Component","constructor","state","usernameRequest","passwordRequest","logedUsername","roles","NoviFilm","Users","NovaProjekcija","filmovi","projekcije","handleClick","bind","handleChange","handleSubmit","handleToUpdateAdd","handleToUpdateDelete","componentDidMount","hide","event","name","target","console","log","window","location","reload","children","show","setState","value","someArg","prevState","updateFilmovi","push","JSON","stringify","e","preventDefault","userLogin","username","password","config","dataType","method","body","fetch","then","res","json","jwt","accessToken","localStorage","setItem","decodedJWTData","sub","conf","headers","Headers","getItem","response","render","buttons","main"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport Login from \"./Login\"\r\nimport Buttons from \"./Buttons\"\r\nimport Main from \"./Main\"\r\nimport Registracija from \"./Registracija\"\r\n\r\nimport $ from \"jquery\" \r\nimport _decodeJWT from 'jwt-decode'\r\n\r\nclass Bioskop extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            usernameRequest:\"\",\r\n            passwordRequest:\"\",\r\n            logedUsername:\"\",\r\n            roles:\"\",\r\n            NoviFilm: false,\r\n            Users: false,\r\n            NovaProjekcija: false,\r\n            filmovi:[],\r\n            projekcije: []\r\n        }\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n        this.handleToUpdateAdd=this.handleToUpdateAdd.bind(this)\r\n        this.handleToUpdateDelete=this.handleToUpdateDelete.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        $('#Registracija').hide()\r\n\r\n    }\r\n\r\n    handleClick(event){\r\n        \r\n        const name = event.target.name\r\n        console.log(\"HandleClick: \"+name)\r\n      /*  $('#Filmovi').hide()\r\n        $('#noviFilm').hide()\r\n        $('#NoviFilm').show()*/\r\n        if(name === \"logout\"){\r\n            window.location.reload()\r\n        }else if(name === \"Registracija\"){\r\n            $('#main').children().hide();\r\n            $('#idLogin').hide()\r\n            $('#Registracija').show()\r\n            $('#registracija').hide()\r\n        }else{\r\n            $('#main').children().hide();\r\n            this.setState({[name]:true})\r\n            $('#'+name).show()\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name,value} = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleToUpdateAdd(someArg){\r\n        this.setState(prevState => {\r\n            const updateFilmovi=prevState.filmovi.push(someArg)\r\n            return {\r\n                filmovi: updateFilmovi\r\n            }\r\n        })\r\n    }\r\n\r\n    handleToUpdateDelete(someArg){\r\n        console.log(\"Filmovi iz podklase: \"+JSON.stringify(someArg))\r\n        this.setState({filmovi:someArg})\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        const userLogin={\r\n            username:this.state.usernameRequest,\r\n            password:this.state.passwordRequest\r\n        }\r\n        var config={\r\n            dataType: 'json',\r\n            method: 'post',\r\n            body: JSON.stringify(userLogin)\r\n          };\r\n\r\n        fetch('http://localhost:8080/auth/login',config)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            const jwt = res.accessToken;\r\n            localStorage.setItem('jwt', jwt);\r\n            const decodedJWTData = _decodeJWT(jwt);\r\n\t    \tif (decodedJWTData != null) {\r\n                this.setState({\r\n                    logedUsername:decodedJWTData.sub,\r\n                    roles:decodedJWTData.roles,\r\n                    passwordRequest:\"\",\r\n                    usernameRequest:\"\"\r\n                })\r\n\t    \t}\r\n          })\r\n\r\n        const conf={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        fetch('http://localhost:8080/bioskop/projekcije',conf)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    projekcije: response\r\n            })\r\n        })  \r\n\r\n        $('#idLogin').hide()\r\n        \r\n    }\r\n\r\n    render(){\r\n        const buttons=this.state.logedUsername !== \"\" &&  <Buttons state={this.state} handleClick={this.handleClick}/>\r\n        const main=this.state.logedUsername !== \"\" && <Main state={this.state} handleToUpdateAdd={this.handleToUpdateAdd} handleToUpdateDelete={this.handleToUpdateDelete}/>\r\n        return(\r\n        <div id=\"Bioskop\">\r\n            <Login handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} state={this.state}/>\r\n            <Registracija/>\r\n            {buttons}\r\n            <br/>\r\n            {main}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Bioskop"]},"metadata":{},"sourceType":"module"}