{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\Bioskop.jsx\";\nimport React from \"react\";\nimport Login from \"./Login\";\nimport Buttons from \"./Buttons\";\nimport Main from \"./Main\";\nimport Registracija from \"./Registracija\";\nimport $ from \"jquery\";\nimport _decodeJWT from 'jwt-decode';\n\nclass Bioskop extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      usernameRequest: \"\",\n      passwordRequest: \"\",\n      logedUsername: \"\",\n      roles: \"\",\n      NoviFilm: false,\n      Users: false,\n      NovaProjekcija: false,\n      filmovi: [],\n      projekcije: [],\n      idProjekcije: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleToUpdateAdd = this.handleToUpdateAdd.bind(this);\n    this.handleToUpdateFilmovi = this.handleToUpdateFilmovi.bind(this);\n    this.handleToUpdateProjekcije = this.handleToUpdateProjekcije.bind(this);\n    this.handleToUpdateAddProjekcije = this.handleToUpdateAddProjekcije.bind(this);\n  }\n\n  componentDidMount() {\n    $('#Registracija').hide();\n  }\n\n  handleClick(event) {\n    const name = event.target.name;\n    console.log(\"HandleClick: \" + name);\n    /*  $('#Filmovi').hide()\r\n      $('#noviFilm').hide()\r\n      $('#NoviFilm').show()*/\n\n    if (name === \"logout\") {\n      window.location.reload();\n    } else if (name === \"Registracija\") {\n      $('#main').children().hide();\n      $('#idLogin').hide();\n      $('#Registracija').show();\n      $('#registracija').hide();\n    } else {\n      $('#main').children().hide();\n      this.setState({\n        [name]: true\n      });\n      $('#' + name).show();\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleToUpdateAdd(someArg) {\n    this.setState(prevState => {\n      const updateFilmovi = prevState.filmovi.push(someArg);\n      return {\n        filmovi: updateFilmovi\n      };\n    });\n  }\n\n  handleToUpdateAddProjekcije(someArg) {\n    console.log(\"handleToUpdateAddProjekcije\");\n    this.setState(prevState => {\n      const updateProjekcije = prevState.projekcije.push(someArg);\n      return {\n        projekcije: updateProjekcije\n      };\n    });\n  }\n\n  handleToUpdateFilmovi(someArg) {\n    this.setState({\n      filmovi: someArg\n    });\n  }\n\n  handleToUpdateProjekcije(someArg) {\n    this.setState({\n      projekcije: someArg\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const userLogin = {\n      username: this.state.usernameRequest,\n      password: this.state.passwordRequest\n    };\n    var config = {\n      dataType: 'json',\n      method: 'post',\n      body: JSON.stringify(userLogin)\n    };\n    fetch('http://localhost:8080/auth/login', config).then(res => res.json()).then(res => {\n      const jwt = res.accessToken;\n      localStorage.setItem('jwt', jwt);\n\n      const decodedJWTData = _decodeJWT(jwt);\n\n      if (decodedJWTData != null) {\n        this.setState({\n          logedUsername: decodedJWTData.sub,\n          roles: decodedJWTData.roles,\n          passwordRequest: \"\",\n          usernameRequest: \"\"\n        });\n      }\n    });\n    $('#idLogin').hide();\n  }\n\n  render() {\n    const buttons = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Buttons, {\n      state: this.state,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 59\n      }\n    });\n    const main = this.state.logedUsername !== \"\" && /*#__PURE__*/React.createElement(Main, {\n      state: this.state,\n      handleToUpdateProjekcije: this.handleToUpdateProjekcije,\n      handleToUpdateAddProjekcije: this.handleToUpdateAddProjekcije,\n      handleToUpdateAdd: this.handleToUpdateAdd,\n      handleToUpdateDelete: this.handleToUpdateDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 55\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Bioskop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      handleClick: this.handleClick,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Registracija, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), buttons, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), main, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, this.state.NovaProjekcija));\n  }\n\n}\n\nexport default Bioskop;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/Bioskop.jsx"],"names":["React","Login","Buttons","Main","Registracija","$","_decodeJWT","Bioskop","Component","constructor","state","usernameRequest","passwordRequest","logedUsername","roles","NoviFilm","Users","NovaProjekcija","filmovi","projekcije","idProjekcije","handleClick","bind","handleChange","handleSubmit","handleToUpdateAdd","handleToUpdateFilmovi","handleToUpdateProjekcije","handleToUpdateAddProjekcije","componentDidMount","hide","event","name","target","console","log","window","location","reload","children","show","setState","value","someArg","prevState","updateFilmovi","push","updateProjekcije","e","preventDefault","userLogin","username","password","config","dataType","method","body","JSON","stringify","fetch","then","res","json","jwt","accessToken","localStorage","setItem","decodedJWTData","sub","render","buttons","main","handleToUpdateDelete"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport Login from \"./Login\"\r\nimport Buttons from \"./Buttons\"\r\nimport Main from \"./Main\"\r\nimport Registracija from \"./Registracija\"\r\n\r\nimport $ from \"jquery\" \r\nimport _decodeJWT from 'jwt-decode'\r\n\r\nclass Bioskop extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            usernameRequest:\"\",\r\n            passwordRequest:\"\",\r\n            logedUsername:\"\",\r\n            roles:\"\",\r\n            NoviFilm: false,\r\n            Users: false,\r\n            NovaProjekcija: false,\r\n            filmovi:[],\r\n            projekcije: [],\r\n            idProjekcije: false\r\n        }\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n        this.handleToUpdateAdd=this.handleToUpdateAdd.bind(this)\r\n        this.handleToUpdateFilmovi=this.handleToUpdateFilmovi.bind(this)\r\n        this.handleToUpdateProjekcije=this.handleToUpdateProjekcije.bind(this)\r\n        this.handleToUpdateAddProjekcije=this.handleToUpdateAddProjekcije.bind(this)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        $('#Registracija').hide()\r\n\r\n    }\r\n\r\n    handleClick(event){\r\n        \r\n        const name = event.target.name\r\n        console.log(\"HandleClick: \"+name)\r\n      /*  $('#Filmovi').hide()\r\n        $('#noviFilm').hide()\r\n        $('#NoviFilm').show()*/\r\n        if(name === \"logout\"){\r\n            window.location.reload()\r\n        }else if(name === \"Registracija\"){\r\n            $('#main').children().hide();\r\n            $('#idLogin').hide()\r\n            $('#Registracija').show()\r\n            $('#registracija').hide()\r\n        }else{\r\n            $('#main').children().hide();\r\n            this.setState({[name]:true})\r\n            $('#'+name).show()\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name,value} = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleToUpdateAdd(someArg){\r\n        this.setState(prevState => {\r\n            const updateFilmovi=prevState.filmovi.push(someArg)\r\n            return {\r\n                filmovi: updateFilmovi\r\n            }\r\n        })\r\n    }\r\n\r\n    handleToUpdateAddProjekcije(someArg){\r\n        console.log(\"handleToUpdateAddProjekcije\")\r\n        this.setState(prevState => {\r\n            const updateProjekcije=prevState.projekcije.push(someArg)\r\n            return {\r\n                projekcije: updateProjekcije\r\n            }\r\n        })\r\n    }\r\n\r\n    handleToUpdateFilmovi(someArg){\r\n        this.setState({filmovi:someArg})\r\n    }\r\n\r\n    handleToUpdateProjekcije(someArg){\r\n        this.setState({projekcije:someArg})\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        const userLogin={\r\n            username:this.state.usernameRequest,\r\n            password:this.state.passwordRequest\r\n        }\r\n        var config={\r\n            dataType: 'json',\r\n            method: 'post',\r\n            body: JSON.stringify(userLogin)\r\n          };\r\n\r\n        fetch('http://localhost:8080/auth/login',config)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            const jwt = res.accessToken;\r\n            localStorage.setItem('jwt', jwt);\r\n            const decodedJWTData = _decodeJWT(jwt);\r\n\t    \tif (decodedJWTData != null) {\r\n                this.setState({\r\n                    logedUsername:decodedJWTData.sub,\r\n                    roles:decodedJWTData.roles,\r\n                    passwordRequest:\"\",\r\n                    usernameRequest:\"\"\r\n                })\r\n\t    \t}\r\n          }) \r\n\r\n        $('#idLogin').hide()\r\n        \r\n    }\r\n\r\n    render(){\r\n        const buttons=this.state.logedUsername !== \"\" &&  <Buttons state={this.state} handleClick={this.handleClick}/>\r\n        const main=this.state.logedUsername !== \"\" && <Main state={this.state} handleToUpdateProjekcije={this.handleToUpdateProjekcije} handleToUpdateAddProjekcije={this.handleToUpdateAddProjekcije} handleToUpdateAdd={this.handleToUpdateAdd} handleToUpdateDelete={this.handleToUpdateDelete}/>\r\n        return(\r\n        <div id=\"Bioskop\">\r\n            <Login handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} state={this.state}/>\r\n            <Registracija/>\r\n            {buttons}\r\n            <br/>\r\n            {main}\r\n            <h1>{this.state.NovaProjekcija}</h1>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Bioskop"]},"metadata":{},"sourceType":"module"}