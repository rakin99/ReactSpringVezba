{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\KupovinaKarte.jsx\";\nimport React from \"react\";\nimport KupovinaKarteForm from \"./KupovinaKarteForm\";\nimport $ from \"jquery\";\n\nclass KupovinaKarte extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      slobodnaSedista: [],\n      projekcija: \"\",\n      izabranaSedista: [],\n      sediste: \"\"\n    };\n    this.dodajSediste = this.dodajSediste.bind(this);\n    this.ukloniSediste = this.ukloniSediste.bind(this);\n  }\n\n  componentDidMount() {\n    const conf = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    this.setState({\n      projekcija: this.props.state.projekcija,\n      slobodnaSedista: this.props.state.brMesta\n    });\n  }\n\n  dodajSediste() {\n    const sediste = $('#slobodnaSedista').val();\n\n    if (sediste === \"\") {\n      alert(\"Izaberite sediste!\");\n    } else {\n      const s = this.state.slobodnaSedista.filter(s => s.redniBroj == sediste)[0];\n      console.log(\"Dodao sediste: \" + JSON.stringify(s));\n      this.state.izabranaSedista.push(s);\n    }\n  }\n\n  ukloniSediste() {\n    console.log(JSON.stringify(this.state.izabranaSedista));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"kupovinaKarte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(KupovinaKarteForm, {\n      dodajSediste: this.dodajSediste,\n      ukloniSediste: this.ukloniSediste,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.izabranaSedista)));\n  }\n\n}\n\nexport default KupovinaKarte;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/KupovinaKarte.jsx"],"names":["React","KupovinaKarteForm","$","KupovinaKarte","Component","constructor","state","slobodnaSedista","projekcija","izabranaSedista","sediste","dodajSediste","bind","ukloniSediste","componentDidMount","conf","headers","Headers","localStorage","getItem","setState","props","brMesta","val","alert","s","filter","redniBroj","console","log","JSON","stringify","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAC,EADP;AAETC,MAAAA,UAAU,EAAC,EAFF;AAGTC,MAAAA,eAAe,EAAC,EAHP;AAITC,MAAAA,OAAO,EAAC;AAJC,KAAb;AAMA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKC,aAAL,GAAmB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAAnB;AACH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,UAAMC,IAAI,GAAC;AACPC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAC,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAA9B,OAAZ,EACa;AAAC,wCAA+B;AAAhC,OADb;AADF,KAAX;AAKA,SAAKC,QAAL,CAAc;AACVZ,MAAAA,UAAU,EAAC,KAAKa,KAAL,CAAWf,KAAX,CAAiBE,UADlB;AAEVD,MAAAA,eAAe,EAAC,KAAKc,KAAL,CAAWf,KAAX,CAAiBgB;AAFvB,KAAd;AAIH;;AAEDX,EAAAA,YAAY,GAAE;AACV,UAAMD,OAAO,GAACR,CAAC,CAAC,kBAAD,CAAD,CAAsBqB,GAAtB,EAAd;;AACA,QAAGb,OAAO,KAAK,EAAf,EAAkB;AACdc,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,KAFD,MAEK;AACD,YAAMC,CAAC,GAAG,KAAKnB,KAAL,CAAWC,eAAX,CAA2BmB,MAA3B,CAAkCD,CAAC,IAAIA,CAAC,CAACE,SAAF,IAAajB,OAApD,EAA6D,CAA7D,CAAV;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBC,IAAI,CAACC,SAAL,CAAeN,CAAf,CAA9B;AACA,WAAKnB,KAAL,CAAWG,eAAX,CAA2BuB,IAA3B,CAAgCP,CAAhC;AACH;AACJ;;AAEDZ,EAAAA,aAAa,GAAE;AACXe,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKzB,KAAL,CAAWG,eAA1B,CAAZ;AACH;;AAEDwB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AAAmB,MAAA,YAAY,EAAE,KAAKtB,YAAtC;AAAoD,MAAA,aAAa,EAAE,KAAKE,aAAxE;AAAuF,MAAA,KAAK,EAAE,KAAKP,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKwB,IAAI,CAACC,SAAL,CAAe,KAAKzB,KAAL,CAAWG,eAA1B,CAAL,CAFJ,CADJ;AAMH;;AA/CsC;;AAkD3C,eAAeN,aAAf","sourcesContent":["import React from \"react\"\r\nimport KupovinaKarteForm from \"./KupovinaKarteForm\"\r\nimport $ from \"jquery\"\r\n\r\nclass KupovinaKarte extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            slobodnaSedista:[],\r\n            projekcija:\"\",\r\n            izabranaSedista:[],\r\n            sediste:\"\"\r\n        }\r\n        this.dodajSediste=this.dodajSediste.bind(this)\r\n        this.ukloniSediste=this.ukloniSediste.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const conf={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        this.setState({\r\n            projekcija:this.props.state.projekcija,\r\n            slobodnaSedista:this.props.state.brMesta\r\n        })\r\n    }\r\n\r\n    dodajSediste(){\r\n        const sediste=$('#slobodnaSedista').val();\r\n        if(sediste === \"\"){\r\n            alert(\"Izaberite sediste!\")\r\n        }else{\r\n            const s = this.state.slobodnaSedista.filter(s => s.redniBroj==sediste)[0]\r\n            console.log(\"Dodao sediste: \"+JSON.stringify(s))\r\n            this.state.izabranaSedista.push(s)\r\n        }\r\n    }\r\n\r\n    ukloniSediste(){\r\n        console.log(JSON.stringify(this.state.izabranaSedista))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"kupovinaKarte\">\r\n                <KupovinaKarteForm dodajSediste={this.dodajSediste} ukloniSediste={this.ukloniSediste} state={this.state}/>\r\n                <h1>{JSON.stringify(this.state.izabranaSedista)}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KupovinaKarte"]},"metadata":{},"sourceType":"module"}