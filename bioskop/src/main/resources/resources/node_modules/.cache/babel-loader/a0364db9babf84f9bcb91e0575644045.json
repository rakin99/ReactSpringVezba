{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\NoviFilm.jsx\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport FilmForm from \"./FilmForm\";\n\nclass NoviFilm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      naziv: \"\",\n      reziser: \"\",\n      glumci: \"\",\n      zanrovi: \"\",\n      trajanje: \"\",\n      distributer: \"\",\n      zemljaPorekla: \"\",\n      godinaProizvodnje: \"\",\n      opis: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.naziv === \"\" || this.state.reziser === \"\" || this.state.glumci === \"\" || this.state.zanrovi === \"\" || this.state.trajanje === \"\" || this.state.distributer === \"\" || this.state.zemljaPorekla === \"\" || this.state.godinaProizvodnje === \"\" || this.state.opis === \"\") {\n      alert(\"--Sva polja moraju biti popunjena!--\");\n    } else {\n      var config = {\n        dataType: 'json',\n        contentType: \"application/json; charset=utf-8\",\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n        },\n        body: JSON.stringify(this.state)\n      }; // On submit of the form, send a POST request with the data to the server.\n\n      fetch('http://localhost:8080/bioskop/filmovi/add', config).then(res => res.json()).then(res => {\n        if (res.result !== \"success\") {\n          alert(res.result);\n        } else if (res.result === \"success\") {\n          this.setState({\n            id: res.id\n          });\n          this.props.handleToUpdateAdd(this.state);\n          this.setState({\n            naziv: \"\",\n            reziser: \"\",\n            glumci: \"\",\n            zanrovi: \"\",\n            trajanje: \"\",\n            distributer: \"\",\n            zemljaPorekla: \"\",\n            godinaProizvodnje: \"\",\n            opis: \"\"\n          });\n          this.cancel();\n          alert(\"Uspesno ste dodali film!\");\n        }\n      });\n    }\n  }\n\n  cancel() {\n    $('#Filmovi').show();\n    $('#NoviFilm').hide();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"NoviFilm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FilmForm, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NoviFilm;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/NoviFilm.jsx"],"names":["React","$","FilmForm","NoviFilm","Component","constructor","state","id","naziv","reziser","glumci","zanrovi","trajanje","distributer","zemljaPorekla","godinaProizvodnje","opis","handleChange","bind","handleSubmit","cancel","event","name","value","target","setState","e","preventDefault","alert","config","dataType","contentType","method","headers","localStorage","getItem","body","JSON","stringify","fetch","then","res","json","result","props","handleToUpdateAdd","show","hide","render"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport $ from \"jquery\"\r\n\r\nimport FilmForm from \"./FilmForm\"\r\n\r\nclass NoviFilm extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            id:\"\",\r\n            naziv: \"\",\r\n            reziser: \"\",\r\n            glumci: \"\",\r\n            zanrovi: \"\",\r\n            trajanje: \"\",\r\n            distributer: \"\",\r\n            zemljaPorekla: \"\",\r\n            godinaProizvodnje: \"\",\r\n            opis: \"\"\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n        this.cancel=this.cancel.bind(this)\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name, value} = event.target\r\n        this.setState({[name]:value})\r\n    } \r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.state.naziv === \"\" || this.state.reziser === \"\" || this.state.glumci === \"\" || \r\n            this.state.zanrovi === \"\" || this.state.trajanje===\"\" || this.state.distributer === \"\" || \r\n            this.state.zemljaPorekla === \"\" || this.state.godinaProizvodnje === \"\" || this.state.opis === \"\"){\r\n                alert(\"--Sva polja moraju biti popunjena!--\")\r\n            }else{\r\n                var config={\r\n                    dataType: 'json',\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    method: 'post',\r\n                    headers: {'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                    body: JSON.stringify(this.state)\r\n                  };\r\n        \r\n                // On submit of the form, send a POST request with the data to the server.\r\n                fetch('http://localhost:8080/bioskop/filmovi/add',config)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        if(res.result !== \"success\"){\r\n                            alert(res.result)\r\n                        }else if(res.result === \"success\"){\r\n                            this.setState({id:res.id})\r\n                            this.props.handleToUpdateAdd(this.state)\r\n\r\n                            this.setState({\r\n                                naziv: \"\",\r\n                                reziser: \"\",\r\n                                glumci: \"\",\r\n                                zanrovi: \"\",\r\n                                trajanje: \"\",\r\n                                distributer: \"\",\r\n                                zemljaPorekla: \"\",\r\n                                godinaProizvodnje: \"\",\r\n                                opis: \"\"\r\n                            })\r\n                            \r\n                            this.cancel()\r\n                            alert(\"Uspesno ste dodali film!\")\r\n                        }\r\n                    })\r\n            }\r\n      }\r\n\r\n      cancel(){\r\n        $('#Filmovi').show();\r\n        $('#NoviFilm').hide();\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"NoviFilm\">\r\n                <FilmForm handleChange={this.handleChange} handleSubmit={this.handleSubmit} state={this.state}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoviFilm"]},"metadata":{},"sourceType":"module"}