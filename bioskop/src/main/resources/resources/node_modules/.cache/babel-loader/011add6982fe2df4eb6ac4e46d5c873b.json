{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\resources\\\\src\\\\KupovinaKarte.jsx\";\nimport React from \"react\";\nimport KupovinaKarteForm from \"./KupovinaKarteForm\";\nimport $ from \"jquery\";\n\nclass KupovinaKarte extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      slobodnaSedista: [],\n      projekcija: \"\",\n      izabranaSedista: []\n    };\n    this.dodajSediste = this.dodajSediste.bind(this);\n    this.ukloniSediste = this.ukloniSediste.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.izabranaSedista.length === 0) {\n      alert(\"--Izaberite sediste!--\");\n    } else {\n      console.log(\"Handle submit\");\n      const sedista = this.state.izabranaSedista.map(s => s.redniBroj);\n      const karta = {\n        idProjekcije: this.state.projekcija.id,\n        sedista: sedista,\n        datumProdaje: new Date(),\n        kupac: this.props.parentState.logedUsername\n      };\n      var config = {\n        dataType: 'json',\n        contentType: \"application/json; charset=utf-8\",\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n        },\n        body: JSON.stringify(karta)\n      }; // On submit of the form, send a POST request with the data to the server.\n\n      fetch('http://localhost:8080/bioskop/karte/add', config).then(res => res.json()).then(res => console.log(res));\n    }\n  }\n\n  componentDidMount() {\n    const conf = {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }, {\n        'Access-Control-Allow-Methods': 'GET'\n      })\n    };\n    this.setState({\n      projekcija: this.props.state.projekcija,\n      slobodnaSedista: this.props.state.brMesta\n    });\n  }\n\n  dodajSediste() {\n    const sediste = $('#slobodnaSedista').val();\n\n    if (sediste === \"\") {\n      alert(\"Izaberite sediste!\");\n    } else {\n      const s = this.state.slobodnaSedista.filter(s => s.redniBroj == sediste)[0];\n      this.state.izabranaSedista.push(s);\n      this.state.izabranaSedista.sort(function (a, b) {\n        return a.redniBroj - b.redniBroj;\n      });\n      this.setState(prevState => {\n        const update = prevState.slobodnaSedista.filter(s => s.redniBroj != sediste);\n        return {\n          slobodnaSedista: update\n        };\n      });\n    }\n  }\n\n  ukloniSediste() {\n    const sediste = $('#izabranaSedista').val();\n\n    if (sediste === \"\") {\n      alert(\"Izaberite sediste!\");\n    } else {\n      const s = this.state.izabranaSedista.filter(s => s.redniBroj == sediste)[0];\n      this.state.slobodnaSedista.push(s);\n      this.state.slobodnaSedista.sort(function (a, b) {\n        return a.redniBroj - b.redniBroj;\n      });\n      this.setState(prevState => {\n        const update = prevState.izabranaSedista.filter(s => s.redniBroj != sediste);\n        return {\n          izabranaSedista: update\n        };\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"kupovinaKarte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(KupovinaKarteForm, {\n      handleSubmit: this.handleSubmit,\n      dodajSediste: this.dodajSediste,\n      ukloniSediste: this.ukloniSediste,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.izabranaSedista)));\n  }\n\n}\n\nexport default KupovinaKarte;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/resources/src/KupovinaKarte.jsx"],"names":["React","KupovinaKarteForm","$","KupovinaKarte","Component","constructor","state","slobodnaSedista","projekcija","izabranaSedista","dodajSediste","bind","ukloniSediste","handleSubmit","e","preventDefault","length","alert","console","log","sedista","map","s","redniBroj","karta","idProjekcije","id","datumProdaje","Date","kupac","props","parentState","logedUsername","config","dataType","contentType","method","headers","localStorage","getItem","body","JSON","stringify","fetch","then","res","json","componentDidMount","conf","Headers","setState","brMesta","sediste","val","filter","push","sort","a","b","prevState","update","render"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport KupovinaKarteForm from \"./KupovinaKarteForm\"\r\nimport $ from \"jquery\"\r\n\r\nclass KupovinaKarte extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            slobodnaSedista:[],\r\n            projekcija:\"\",\r\n            izabranaSedista:[]\r\n        }\r\n        this.dodajSediste=this.dodajSediste.bind(this)\r\n        this.ukloniSediste=this.ukloniSediste.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        if(this.state.izabranaSedista.length === 0){\r\n            alert(\"--Izaberite sediste!--\")\r\n        }else{\r\n            console.log(\"Handle submit\")\r\n            const sedista = this.state.izabranaSedista.map(s => s.redniBroj)\r\n            const karta = {\r\n                idProjekcije : this.state.projekcija.id,\r\n                sedista : sedista,\r\n                datumProdaje : new Date(),\r\n                kupac : this.props.parentState.logedUsername\r\n            }\r\n            var config={\r\n                dataType: 'json',\r\n                contentType:\"application/json; charset=utf-8\",\r\n                method: 'post',\r\n                headers: {'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                body: JSON.stringify(karta)\r\n              };\r\n    \r\n            // On submit of the form, send a POST request with the data to the server.\r\n            fetch('http://localhost:8080/bioskop/karte/add',config)\r\n                .then(res => res.json())\r\n                .then(res => console.log(res))\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const conf={\r\n            headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('jwt')},\r\n                                  {'Access-Control-Allow-Methods':'GET'}),\r\n          };\r\n\r\n        this.setState({\r\n            projekcija:this.props.state.projekcija,\r\n            slobodnaSedista:this.props.state.brMesta\r\n        })\r\n    }\r\n\r\n    dodajSediste(){\r\n        const sediste=$('#slobodnaSedista').val();\r\n        if(sediste === \"\"){\r\n            alert(\"Izaberite sediste!\")\r\n        }else{\r\n            const s = this.state.slobodnaSedista.filter(s => s.redniBroj==sediste)[0]\r\n            this.state.izabranaSedista.push(s)\r\n            this.state.izabranaSedista.sort(function(a, b){return a.redniBroj - b.redniBroj});\r\n            this.setState(prevState =>{\r\n                const update=prevState.slobodnaSedista.filter(s => s.redniBroj!=sediste)\r\n                return{\r\n                    slobodnaSedista:update\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    ukloniSediste(){\r\n        const sediste=$('#izabranaSedista').val();\r\n        if(sediste === \"\"){\r\n            alert(\"Izaberite sediste!\")\r\n        }else{\r\n            const s = this.state.izabranaSedista.filter(s => s.redniBroj==sediste)[0]\r\n            this.state.slobodnaSedista.push(s)\r\n            this.state.slobodnaSedista.sort(function(a, b){return a.redniBroj - b.redniBroj});\r\n            this.setState(prevState =>{\r\n                const update=prevState.izabranaSedista.filter(s => s.redniBroj!=sediste)\r\n                return{\r\n                    izabranaSedista:update\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"kupovinaKarte\">\r\n                <KupovinaKarteForm handleSubmit={this.handleSubmit} dodajSediste={this.dodajSediste} ukloniSediste={this.ukloniSediste} state={this.state}/>\r\n                <h1>{JSON.stringify(this.state.izabranaSedista)}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KupovinaKarte"]},"metadata":{},"sourceType":"module"}