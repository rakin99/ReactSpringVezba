{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Documents\\\\Praksa\\\\Bioskop\\\\src\\\\META-INf\\\\resources\\\\src\\\\Registracija.jsx\";\nimport React from \"react\";\nimport RegistracijaForm from \"./RegistracijaForm\";\n\nclass Registracija extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      korisnickoIme: \"\",\n      lozinka: \"\",\n      datumRegistracije: new Date(),\n      uloga: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      datumRegistracije: new Date(),\n      uloga: \"admin\"\n    });\n    var config = {\n      dataType: 'json',\n      method: 'post',\n      body: JSON.stringify(this.state)\n    }; // On submit of the form, send a POST request with the data to the server.\n\n    fetch('http://localhost:8080/bioskop/users', config).then(res => res.json()).then(res => console.log(res));\n    alert(\"Uspešno ste se registrovali!\");\n    window.location.reload();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Registracija\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RegistracijaForm, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      state: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Registracija;","map":{"version":3,"sources":["C:/Users/Dejan/Documents/Praksa/Bioskop/src/META-INf/resources/src/Registracija.jsx"],"names":["React","RegistracijaForm","Registracija","Component","constructor","state","korisnickoIme","lozinka","datumRegistracije","Date","uloga","handleChange","bind","handleSubmit","event","name","value","target","setState","e","preventDefault","config","dataType","method","body","JSON","stringify","fetch","then","res","json","console","log","alert","window","location","reload","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA0C;AAEtCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAG,EADP;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,iBAAiB,EAAE,IAAIC,IAAJ,EAHV;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKC,QAAL,CAAc;AACV,OAACH,IAAD,GAAOC;AADG,KAAd;AAGH;;AAEDH,EAAAA,YAAY,CAACM,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;AAEA,SAAKF,QAAL,CAAc;AACVV,MAAAA,iBAAiB,EAAE,IAAIC,IAAJ,EADT;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAKA,QAAIW,MAAM,GAAC;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,MAAM,EAAE,MAFD;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKrB,KAApB;AAHC,KAAX,CARW,CAcX;;AACAsB,IAAAA,KAAK,CAAC,qCAAD,EAAuCN,MAAvC,CAAL,CACKO,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAFjB;AAIAI,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAEHC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAmB,MAAA,YAAY,EAAE,KAAK1B,YAAtC;AAAoD,MAAA,YAAY,EAAE,KAAKE,YAAvE;AAAqF,MAAA,KAAK,EAAE,KAAKR,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAlDqC;;AAqD1C,eAAeH,YAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport RegistracijaForm from \"./RegistracijaForm\"\r\n\r\nclass Registracija extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            korisnickoIme : \"\",\r\n            lozinka: \"\",\r\n            datumRegistracije: new Date(),\r\n            uloga: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event){\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            datumRegistracije: new Date(),\r\n            uloga: \"admin\"\r\n        })\r\n\r\n        var config={\r\n            dataType: 'json',\r\n            method: 'post',\r\n            body: JSON.stringify(this.state)\r\n          };\r\n\r\n        // On submit of the form, send a POST request with the data to the server.\r\n        fetch('http://localhost:8080/bioskop/users',config)\r\n            .then(res => res.json())\r\n            .then(res => console.log(res))\r\n\r\n        alert(\"Uspešno ste se registrovali!\")\r\n        window.location.reload();\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"Registracija\">\r\n                <RegistracijaForm  handleChange={this.handleChange} handleSubmit={this.handleSubmit} state={this.state}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registracija"]},"metadata":{},"sourceType":"module"}